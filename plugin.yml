name: "sqs-consumer-app-kt-plugin"
description: Plugin to configure sqs consumer
types: 
  - app
tags:
  - sqs
  - consumer
inputs:
  - label: "SQS Message Deletion Policy: "
    type: text
    name: "sqs_message_deletion_policy"
    items:
      - "ALWAYS"
      - "NEVER"
      - "NO_REDRIVE"
      - "ON_SUCCESS"
    default: "ON_SUCCESS"
  - label: "Consumer queue name: "
    type: text
    name: "sqs_consumer_queue_name"

computedInputs: 
  camel_queue_name: "{{sqs_consumer_queue_name|to_camel}}"

hooks:
  - type: edit
    trigger: after-render
    path: infra/src/main/kotlin/{{project_group_id|group_id_folder}}/{{project_name|to_camel}}CdkStack.kt
    changes:
      - search:
          pattern: 'init\s?{'
          insert-after:
            value: "        val sqsConsumerNestedStack = Sqs{{computed_inputs.camel_queue_name}}NestedStack(this, \"Sqs{{computed_inputs.camel_queue_name}}NestedStack\", stageObject)\n"
          when:
            not-exists: "val sqsConsumerNestedStack = Sqs{{computed_inputs.camel_queue_name}}NestedStack(this, \"Sqs{{computed_inputs.camel_queue_name}}NestedStack\", stageObject)"
      - search:
          string: 'val accountRole ='
          insert-after:
            value: "        sqsConsumerNestedStack.queue.grantConsumeMessages(accountRole)"
          when:
            not-exists: "sqsConsumerNestedStack.queue.grantConsumeMessages(accountRole)"
